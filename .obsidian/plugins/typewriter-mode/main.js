var G=Object.defineProperty;var Te=Object.getOwnPropertyDescriptor;var Se=Object.getOwnPropertyNames;var ve=Object.prototype.hasOwnProperty;var Ee=(t,e)=>{for(var i in e)G(t,i,{get:e[i],enumerable:!0})},Ce=(t,e,i,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Se(e))!ve.call(t,s)&&s!==i&&G(t,s,{get:()=>e[s],enumerable:!(r=Te(e,s))||r.enumerable});return t};var Me=t=>Ce(G({},"__esModule",{value:!0}),t);var De={};Ee(De,{default:()=>Le});module.exports=Me(De);var R={isTypewriterScrollEnabled:!0,isOnlyActivateAfterFirstInteractionEnabled:!1,isOnlyMaintainTypewriterOffsetWhenReachedEnabled:!1,isTypewriterOnlyUseCommandsEnabled:!1,typewriterOffset:.5,isKeepLinesAboveAndBelowEnabled:!1,linesAboveAndBelow:5,isMaxCharsPerLineEnabled:!1,maxCharsPerLine:64,isDimUnfocusedParagraphsEnabled:!1,dimUnfocusedEditorsBehavior:"dim",dimmedParagraphsOpacity:.25,isPauseDimUnfocusedParagraphsWhileScrollingEnabled:!0,isPauseDimUnfocusedParagraphsWhileSelectingEnabled:!0,isHighlightCurrentLineEnabled:!0,isHighlightCurrentLineOnlyInFocusedEditorEnabled:!1,currentLineHighlightStyle:"box",currentLineHighlightUnderlineThickness:1,"currentLineHighlightColor-dark":"#444","currentLineHighlightColor-light":"#ddd",doesFullscreenWritingFocusShowHeader:!1,doesFullscreenWritingFocusShowVignette:!0,fullscreenWritingFocusVignetteStyle:"box"};var Z=require("obsidian"),m=class extends Z.PluginSettingTab{plugin;constructor(e,i){super(e,i),this.plugin=i}display(){this.containerEl.empty();for(let e of Object.values(this.plugin.features))e.registerSetting(this)}};var ee=require("@codemirror/state"),a=ee.Facet.define({combine:t=>t.length===0?R:t[t.length-1]});var te=require("@codemirror/state"),h=class{constructor(e){this.view=e;this.onLoad(),this.domResizeObserver=new ResizeObserver(this.onResize.bind(this)),this.domResizeObserver.observe(this.view.dom.ownerDocument.body)}domResizeObserver;userEventAllowed(e){let{isTypewriterOnlyUseCommandsEnabled:i}=this.view.state.facet(a),r=/^(select|input|delete|undo|redo)(\..+)?$/,s=/^(select.pointer)$/;return i&&(r=/^(input|delete|undo|redo)(\..+)?$/,s=/^(select)(\..+)?$/),r.test(e)&&!s.test(e)}userEventsAllowed(e){let i=e.transactions.map(r=>r.annotation(te.Transaction.userEvent)).filter(r=>r!==void 0);return i.length===0?null:i.reduce((r,s)=>r&&this.userEventAllowed(s),i.length>0)}update(e){let i=this.userEventsAllowed(e);if(i===null){this.updateNonUserEvent();return}i?this.updateAllowedUserEvent():this.updateDisallowedUserEvent()}onLoad(){}updateAllowedUserEvent(){}updateDisallowedUserEvent(){}updateNonUserEvent(){}onResize(){}destroy(){var e;(e=this.domResizeObserver)==null||e.disconnect()}};var ie=require("@codemirror/state"),I=ie.Facet.define({combine:t=>t.length===0?{cssVariables:{},bodyAttrs:{},bodyClasses:[]}:t[t.length-1]});function ne(t,e){var i;return parseFloat((i=t.contentDOM.querySelector(".cm-active.cm-line"))==null?void 0:i.getCssPropertyValue(e).replace("px",""))}function re(t){var s;let e=((s=t.coordsAtPos(t.state.selection.main.head))==null?void 0:s.top)??0,i=t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor");if(!i)return 0;let r=i.getBoundingClientRect().top;return e-r}function xe(t,e){let i=t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor");if(!i)return 0;let r=ne(t,"font-size"),s=t.state.facet(a).typewriterOffset,c=i.clientHeight*s,j=(e-r)/2;return c-j}function Pe(t){let e=ne(t,"line-height"),i=xe(t,e),r=re(t),{isTypewriterScrollEnabled:s,isKeepLinesAboveAndBelowEnabled:c,isOnlyMaintainTypewriterOffsetWhenReachedEnabled:j}=t.state.facet(a),Q=t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor"),_=t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-scroller"),d;if(!Q||!_)d=0;else if(s)d=i,j&&(d=_.scrollTop+r<i?Math.min(i,r):i);else if(c){let{linesAboveAndBelow:J}=t.state.facet(a),X=t.defaultLineHeight*J,Y=Q.clientHeight-t.defaultLineHeight*(J+1),ye=_.scrollTop!==0&&r<X,be=r>Y;ye?d=X:be?d=Y:d=r}else d=re(t);return{typewriterOffset:i,scrollOffset:d,activeLineOffset:r,lineHeight:e}}function q(t,e,i){t.requestMeasure({key:e,read:r=>Pe(r),write:(r,s)=>{window.requestAnimationFrame(()=>{i(r,s)})}})}var $=require("@codemirror/view"),se=$.ViewPlugin.fromClass(class extends h{currentLineHighlight=null;isInitialInteraction=!0;isRenderingAllowedUserEvent=!1;onLoad(){super.onLoad();let t=this.view.state.facet(I);this.view.dom.ownerDocument.body.addClasses(t.bodyClasses),this.view.dom.ownerDocument.body.setCssProps(t.cssVariables),this.view.dom.ownerDocument.body.setAttrs(t.bodyAttrs),window.addEventListener("moveByCommand",this.moveByCommand.bind(this)),this.updateAfterExternalEvent()}setupWheelListener(){let t=this.view.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-scroller");t&&t.addEventListener("wheel",this.onWheel.bind(this))}updateAllowedUserEvent(){super.updateAllowedUserEvent();let t=this.view.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor");t&&(t.classList.remove("ptm-wheel"),t.classList.remove("ptm-select")),this.isInitialInteraction&&(this.view.dom.ownerDocument.body.classList.remove("ptm-first-open"),this.isInitialInteraction=!1),this.isRenderingAllowedUserEvent=!0,q(this.view,"TypewriterModeUpdateAfterUserEvent",(e,i)=>{this.recenterAndMoveCurrentLineHighlight(i,e),this.isRenderingAllowedUserEvent=!1})}updateDisallowedUserEvent(){if(this.isRenderingAllowedUserEvent)return;super.updateDisallowedUserEvent(),this.isInitialInteraction&&(this.view.dom.ownerDocument.body.classList.remove("ptm-first-open"),this.isInitialInteraction=!1);let t=this.view.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor");t&&t.classList.add("ptm-select"),q(this.view,"TypewriterModeUpdateAfterUserEvent",({activeLineOffset:e,lineHeight:i},r)=>{let{isHighlightCurrentLineEnabled:s}=r.state.facet(a);s&&this.moveCurrentLineHighlight(r,e,i)})}updateNonUserEvent(){if(super.updateNonUserEvent(),!this.isInitialInteraction)return;let{isOnlyActivateAfterFirstInteractionEnabled:t}=this.view.state.facet(a);t&&this.view.dom.ownerDocument.body.classList.add("ptm-first-open")}moveByCommand(){let t=this.view.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor");t&&t.classList.remove("ptm-select"),this.updateAllowedUserEvent()}onResize(){super.onResize(),this.updateAfterExternalEvent()}onWheel(){let t=this.view.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor");t&&t.classList.add("ptm-wheel")}destroy(){var e;super.destroy(),(e=this.currentLineHighlight)==null||e.remove();let t=this.view.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-scroller");t&&t.removeEventListener("wheel",this.onWheel),window.removeEventListener("moveByCommand",this.moveByCommand.bind(this))}updateAfterExternalEvent(){let{isTypewriterScrollEnabled:t}=this.view.state.facet(a);q(this.view,"TypewriterModeUpdateAfterExternalEvent",(e,i)=>{this.setupWheelListener(),t&&this.setPadding(i,e.typewriterOffset),this.recenterAndMoveCurrentLineHighlight(i,e)})}loadCurrentLineHighlight(t){let e=t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor");if(!e)return!1;let i=e.querySelector(".ptm-current-line-highlight");if(i)this.currentLineHighlight=i;else{this.currentLineHighlight=document.createElement("div");let r=t.state.facet(a);this.currentLineHighlight.className=`ptm-current-line-highlight ptm-current-line-highlight-${r.currentLineHighlightStyle}`,e.appendChild(this.currentLineHighlight)}return!0}moveCurrentLineHighlight(t,e,i){this.loadCurrentLineHighlight(t)&&(this.currentLineHighlight.style.height=`${i}px`,this.currentLineHighlight.style.top=`${e}px`)}setPadding(t,e){let{isOnlyMaintainTypewriterOffsetWhenReachedEnabled:i}=t.state.facet(a),r=t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-sizer");r&&(r.style.padding=i?`0 0 ${e}px 0`:`${e}px 0`)}recenter(t,e){let i=t.state.selection.main.head,r=$.EditorView.scrollIntoView(i,{y:"start",yMargin:e}),s=t.state.update({effects:r});t.dispatch(s)}recenterAndMoveCurrentLineHighlight(t,{scrollOffset:e,lineHeight:i}){let{isTypewriterScrollEnabled:r,isKeepLinesAboveAndBelowEnabled:s,isHighlightCurrentLineEnabled:c}=t.state.facet(a);(r||s)&&this.recenter(t,e),c&&this.moveCurrentLineHighlight(t,e,i)}});var l=class{constructor(e){this.plugin=e}load(){}};var o=class extends l{enable(){}disable(){}};var oe=require("obsidian"),p=class extends o{setting;themeMode;constructor(e,i){super(e),this.themeMode=i,this.setting=`currentLineHighlightColor-${i}`}registerSetting(e){new oe.Setting(e.containerEl).setName(`Current line highlight color in ${this.themeMode} themes`).setDesc(`The color of the current line highlight in ${this.themeMode} themes`).setClass("typewriter-mode-setting").addText(i=>i.setValue(this.plugin.settings[this.setting]).onChange(r=>{this.changeCurrentLineHighlightColor(r)})).setDisabled(!this.plugin.settings.isHighlightCurrentLineEnabled)}load(){this.plugin.setCSSVariable(`--current-line-highlight-color-${this.themeMode}`,`${this.plugin.settings[this.setting]}`)}changeCurrentLineHighlightColor(e){this.plugin.settings[this.setting]=e,this.plugin.setCSSVariable(`--current-line-highlight-color-${this.themeMode}`,`${e}`),this.plugin.saveSettings().then(()=>{this.plugin.reloadCodeMirror()})}};var u=class extends p{constructor(e){super(e,"dark")}};var f=class extends p{constructor(e){super(e,"light")}};var ae=require("obsidian"),w=class extends o{setting="currentLineHighlightStyle";registerSetting(e){new ae.Setting(e.containerEl).setName("Current line highlight style").setDesc("The style of the current line highlight").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("box","Box").addOption("underline","Underline").setValue(this.plugin.settings.currentLineHighlightStyle).onChange(r=>{this.changeCurrentLineHighlightStyle(r),e.display()})).setDisabled(!this.plugin.settings.isHighlightCurrentLineEnabled)}changeCurrentLineHighlightStyle(e){this.plugin.settings.currentLineHighlightStyle=e,this.plugin.reloadCodeMirror(),this.plugin.saveSettings().then()}};var le=require("obsidian"),y=class extends o{setting="currentLineHighlightUnderlineThickness";registerSetting(e){new le.Setting(e.containerEl).setName("Current line underline thickness").setDesc("The thickness of the underline that highlights the current line").setClass("typewriter-mode-setting").addSlider(i=>i.setLimits(1,5,1).setDynamicTooltip().setValue(this.plugin.settings.currentLineHighlightUnderlineThickness).onChange(r=>{this.changeCurrentLineHighlightUnderlineThickness(r)})).setDisabled(!this.plugin.settings.isHighlightCurrentLineEnabled||this.plugin.settings.currentLineHighlightStyle!=="underline")}load(){this.plugin.setCSSVariable("--current-line-highlight-underline-thickness",`${this.plugin.settings.currentLineHighlightUnderlineThickness}px`)}changeCurrentLineHighlightUnderlineThickness(e){this.plugin.settings.currentLineHighlightUnderlineThickness=e,this.plugin.setCSSVariable("--current-line-highlight-underline-thickness",`${e}px`),this.plugin.saveSettings().then(()=>{this.plugin.reloadCodeMirror()})}};var de=require("obsidian"),b=class extends o{setting="dimUnfocusedEditorsBehavior";registerSetting(e){new de.Setting(e.containerEl).setName("Paragraph dimming behavior in unfocused notes").setDesc("How to dim paragraphs in notes / editors that your cursor is not on (e.g. if you have multiple notes open in split panes)").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("dim-none","Do not dim any paragraph").addOption("dim","Dim all but the previously focused paragraph").addOption("dim-all","Dim all paragraphs").setValue(this.plugin.settings.dimUnfocusedEditorsBehavior).onChange(r=>{this.changeDimUnfocusedEditorsBehavior(r),e.display()})).setDisabled(!this.plugin.settings.isDimUnfocusedParagraphsEnabled)}load(){super.load(),this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-editors-behavior"]=this.plugin.settings.dimUnfocusedEditorsBehavior}changeDimUnfocusedEditorsBehavior(e){this.plugin.settings.dimUnfocusedEditorsBehavior=e,this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-editors-behavior"]=e,this.plugin.saveSettings().then()}};var pe=require("obsidian"),n=class extends o{toggleClass=null;commandTitle;registerCommand(){this.hasCommand&&this.plugin.addCommand({id:this.setting,name:this.commandTitle,callback:this.toggle.bind(this)})}registerSetting(e){new pe.Setting(e.containerEl).setName(this.settingTitle).setDesc(this.settingDesc).setClass("typewriter-mode-setting").addToggle(i=>i.setValue(this.plugin.settings[this.setting]).onChange(r=>{this.toggle(r),e.display()})).setDisabled(!this.isSettingEnabled())}load(){this.registerCommand(),this.plugin.settings[this.setting]?this.enable():this.disable()}toggle(e=null){let i=e;i===null&&(i=!this.plugin.settings[this.setting]),this.plugin.settings[this.setting]=i,i?this.enable():this.disable(),this.plugin.saveSettings().then()}reloadIfRequired(){this.requiresReload&&this.plugin.reloadCodeMirror()}enable(){this.toggleClass&&(this.plugin.perWindowProps.bodyClasses.contains(this.toggleClass)||this.plugin.perWindowProps.bodyClasses.push(this.toggleClass)),this.reloadIfRequired()}disable(){this.toggleClass&&this.plugin.perWindowProps.bodyClasses.indexOf(this.toggleClass)&&this.plugin.perWindowProps.bodyClasses.remove(this.toggleClass),this.reloadIfRequired()}isSettingEnabled(){return!0}};var T=class extends n{setting="isDimUnfocusedParagraphsEnabled";toggleClass="ptm-dim-unfocused-paragraphs";requiresReload=!0;hasCommand=!0;commandTitle="Toggle dimming unfocused paragraphs";settingTitle="Dim unfocused paragraphs";settingDesc="Darkens unfocused paragraphs in the editor"};var ge=require("obsidian"),S=class extends o{setting="dimmedParagraphsOpacity";registerSetting(e){new ge.Setting(e.containerEl).setName("Opacity of dimmed paragraphs").setDesc("The opacity of dimmed paragraphs").setClass("typewriter-mode-setting").addSlider(i=>i.setLimits(0,100,5).setDynamicTooltip().setValue(this.plugin.settings.dimmedParagraphsOpacity*100).onChange(r=>{this.changeDimmedParagraphsOpacity(r/100)})).setDisabled(!this.plugin.settings.isDimUnfocusedParagraphsEnabled)}load(){this.plugin.setCSSVariable("--dimmed-paragraphs-opacity",`${this.plugin.settings.dimmedParagraphsOpacity}`)}changeDimmedParagraphsOpacity(e=.25){this.plugin.settings.dimmedParagraphsOpacity=e,this.plugin.setCSSVariable("--dimmed-paragraphs-opacity",`${e}`),this.plugin.saveSettings().then(()=>{this.plugin.reloadCodeMirror()})}};var g=class extends l{registerCommand(){this.plugin.addCommand({id:this.commandKey,name:this.commandTitle,callback:this.onCommand.bind(this)})}load(){this.registerCommand()}};var N=class extends g{commandKey="fullscreen-writing-focus";commandTitle="Toggle fullscreen writing focus";onCommand(){let i=this.plugin.app.workspace.activeLeaf.view;i.getViewType()!=="empty"&&(document.fullscreenElement?this.exitFullscreenWritingFocus():this.startFullscreenWritingFocus(i),i.containerEl.onfullscreenchange=()=>{document.fullscreenElement||this.onExitFullscreenWritingFocus()})}startFullscreenWritingFocus(e){let i=this.plugin.settings.doesFullscreenWritingFocusShowHeader?e.containerEl:e.contentEl;i.requestFullscreen().then(()=>{i.classList.add("ptm-fullscreen-writing-focus-element"),i.setAttr("data-ptm-fullscreen-writing-focus-vignette-style",this.plugin.settings.fullscreenWritingFocusVignetteStyle)})}exitFullscreenWritingFocus(){document.exitFullscreen().then()}onExitFullscreenWritingFocus(){let e=document.getElementsByClassName("ptm-fullscreen-writing-focus-element");!e||e.length===0||(e[0].removeAttribute("data-ptm-fullscreen-writing-focus-vignette-style"),e[0].classList.remove("ptm-fullscreen-writing-focus-element"))}};var v=class extends n{setting="doesFullscreenWritingFocusShowHeader";toggleClass="ptm-fullscreen-writing-focus-show-header";requiresReload=!1;hasCommand=!1;settingTitle="Show header in fullscreen writing focus";settingDesc="If enabled, the header will be shown in fullscreen writing focus"};var E=class extends n{setting="doesFullscreenWritingFocusShowVignette";toggleClass="ptm-fullscreen-writing-focus-vignette";requiresReload=!1;hasCommand=!1;settingTitle="Fullscreen writing focus vignette";settingDesc="Add a vignette to the edges of the screen in fullscreen writing focus"};var ce=require("obsidian"),C=class extends o{setting="fullscreenWritingFocusVignetteStyle";registerSetting(e){new ce.Setting(e.containerEl).setName("Fullscreen writing focus vignette style").setDesc("The style of the vignette in fullscreen writing focus mode").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("box","Box").addOption("column","Column").setValue(this.plugin.settings.fullscreenWritingFocusVignetteStyle).onChange(r=>{this.changeVignetteStyle(r),e.display()})).setDisabled(!this.plugin.settings.doesFullscreenWritingFocusShowVignette)}changeVignetteStyle(e){this.plugin.settings.fullscreenWritingFocusVignetteStyle=e,this.plugin.saveSettings().then()}};var M=class extends n{setting="isHighlightCurrentLineEnabled";toggleClass="ptm-highlight-current-line";requiresReload=!0;hasCommand=!0;commandTitle="Toggle highlight current line";settingTitle="Highlight current line";settingDesc="Highlights the line that the cursor is currently on"};var x=class extends n{setting="isHighlightCurrentLineOnlyInFocusedEditorEnabled";toggleClass="ptm-highlight-current-line-only-in-active-editor";requiresReload=!1;hasCommand=!1;settingTitle="Highlight current line only in focused note";settingDesc="Only show highlighted line in the note your cursor is on (e.g. if you have multiple notes open in split panes)";isSettingEnabled(){return this.plugin.settings.isHighlightCurrentLineEnabled}};var P=class extends n{setting="isKeepLinesAboveAndBelowEnabled";requiresReload=!0;hasCommand=!0;commandTitle="Toggle keeping lines above and below";settingTitle="Keep lines above and below";settingDesc="When enabled, always keeps the specified amount of lines above and below the current line in view";isSettingEnabled(){return!this.plugin.settings.isTypewriterScrollEnabled}};var L=class extends n{setting="isMaxCharsPerLineEnabled";toggleClass="ptm-max-chars-per-line";requiresReload=!1;hasCommand=!0;commandTitle="Toggle maximum number of characters per line";settingTitle="Limit maximum number of characters per line";settingDesc="Limits the maximum number of characters per line"};var me=require("obsidian"),D=class extends o{setting="linesAboveAndBelow";registerSetting(e){new me.Setting(e.containerEl).setName("Amount of lines above and below the current line").setDesc("The amount of lines to always keep above and below the current line").setClass("typewriter-mode-setting").addText(i=>i.setValue(this.plugin.settings.linesAboveAndBelow.toString()).onChange(r=>{this.changeAmountOfLinesAboveAndBelow(parseInt(r))})).setDisabled(this.plugin.settings.isTypewriterScrollEnabled||!this.plugin.settings.isKeepLinesAboveAndBelowEnabled)}changeAmountOfLinesAboveAndBelow(e){this.plugin.settings.linesAboveAndBelow=e,this.plugin.saveSettings().then()}};var he=require("obsidian"),A=class extends o{setting="maxCharsPerLine";registerSetting(e){new he.Setting(e.containerEl).setName("Maximum number of characters per line").setDesc("The maximum number of characters per line").setClass("typewriter-mode-setting").addText(i=>i.setValue(this.plugin.settings.maxCharsPerLine.toString()).onChange(r=>{this.changeMaxCharsPerLine(parseInt(r))})).setDisabled(!this.plugin.settings.isMaxCharsPerLineEnabled)}load(){this.plugin.setCSSVariable("--max-chars-per-line",`${this.plugin.settings.maxCharsPerLine}ch`)}changeMaxCharsPerLine(e){this.plugin.settings.maxCharsPerLine=e,this.plugin.setCSSVariable("--max-chars-per-line",`${e}ch`),this.plugin.saveSettings().then(()=>{this.plugin.reloadCodeMirror()})}};function ue(t){return t.charAt(0).toUpperCase()+t.slice(1)}var z=class extends l{load(){for(let e of["up","down"])this.plugin.addCommand({id:`move-typewriter-${e}`,name:`Move typewriter ${e}`,hotkeys:[{modifiers:["Mod"],key:e==="up"?"ArrowUp":"ArrowDown"}],editorCallback:(i,r)=>this.onCommand(i,e)})}onCommand(e,i){e.exec(`go${ue(i)}`),window.dispatchEvent(new Event("moveByCommand"))}};var O=class extends n{setting="isOnlyActivateAfterFirstInteractionEnabled";requiresReload=!0;hasCommand=!1;settingTitle="Only activate after first interaction";settingDesc="Activate the focused line highlight and paragraph dimming only after the first interaction with the editor"};var F=class extends n{setting="isOnlyMaintainTypewriterOffsetWhenReachedEnabled";requiresReload=!0;hasCommand=!1;settingTitle="Only maintain typewriter offset when reached";settingDesc="The line that the cursor is on will not be scrolled to the center of the editor until it the specified typewriter offset is reached. This removes the additional space at the top of the editor.";isSettingEnabled(){return this.plugin.settings.isTypewriterScrollEnabled}};var H=class extends n{setting="isPauseDimUnfocusedParagraphsWhileScrollingEnabled";toggleClass="ptm-dim-unfocused-paragraphs-pause-while-scrolling";requiresReload=!0;hasCommand=!1;settingTitle="Pause dimming unfocused paragraphs while scrolling";settingDesc="If this is enabled, paragraphs are not dimmed while scrolling";isSettingEnabled(){return this.plugin.settings.isDimUnfocusedParagraphsEnabled}};var U=class extends n{setting="isPauseDimUnfocusedParagraphsWhileSelectingEnabled";toggleClass="ptm-dim-unfocused-paragraphs-pause-while-selecting";requiresReload=!0;hasCommand=!1;settingTitle="Pause dimming unfocused paragraphs while selecting text";settingDesc="If this is enabled, paragraphs are not dimmed while selecting text";isSettingEnabled(){return this.plugin.settings.isDimUnfocusedParagraphsEnabled}};var K=class extends g{commandKey="typewriter-scrolling-and-paragraph-dimming";commandTitle="Toggle typewriter scrolling and paragraph dimming";onCommand(){let{isTypewriterScrollEnabled:e,isDimUnfocusedParagraphsEnabled:i}=this.plugin.settings,r=e&&i;this.plugin.features.TypewriterScroll.toggle(!r),this.plugin.features.DimUnfocusedParagraphs.toggle(!r)}};var fe=require("obsidian"),k=class extends o{setting="typewriterOffset";registerSetting(e){new fe.Setting(e.containerEl).setName("Typewriter offset").setDesc("Positions the typewriter line at the specified percentage of the screen").setClass("typewriter-mode-setting").addSlider(i=>i.setLimits(0,100,5).setDynamicTooltip().setValue(this.plugin.settings.typewriterOffset*100).onChange(r=>{this.changeTypewriterOffset(r/100)})).setDisabled(!this.plugin.settings.isTypewriterScrollEnabled)}changeTypewriterOffset(e){this.plugin.settings.typewriterOffset=e,this.plugin.settings.isTypewriterScrollEnabled&&this.plugin.reloadCodeMirror(),this.plugin.saveSettings().then()}};var V=class extends n{setting="isTypewriterOnlyUseCommandsEnabled";toggleClass="ptm-typewriter-only-use-commands";requiresReload=!0;hasCommand=!1;settingTitle="Do not snap typewriter with arrow keys";settingDesc="The typewriter will only snap when using this plugin's move commands. It will not snap when using the arrow keys. The move commands are by default Cmd/Ctrl+ArrowUp/ArrowDown, but you can assign your own hotkeys for the move commands in Obsidian's settings.";isSettingEnabled(){return this.plugin.settings.isTypewriterScrollEnabled}};var W=class extends n{setting="isTypewriterScrollEnabled";toggleClass="ptm-typewriter-scroll";requiresReload=!0;hasCommand=!0;commandTitle="Toggle typewriter scrolling";settingTitle="Typewriter scrolling";settingDesc="Turns typewriter scrolling on or off";isSettingEnabled(){return!this.plugin.settings.isKeepLinesAboveAndBelowEnabled}};var we=require("obsidian"),B=class extends we.Plugin{settings;perWindowProps={cssVariables:{},bodyClasses:[],bodyAttrs:{}};editorExtensions=[];features={TypewriterScroll:new W(this),TypewriterOffset:new k(this),OnlyMaintainTypewriterOffsetWhenReached:new F(this),TypewriterOnlyUseCommands:new V(this),KeepLinesAboveAndBelow:new P(this),LinesAboveAndBelow:new D(this),HighlightCurrentLine:new M(this),CurrentLineHighlightColorLight:new f(this),CurrentLineHighlightColorDark:new u(this),CurrentLineHighlightStyle:new w(this),CurrentLineHighlightUnderlineThickness:new y(this),HighlightCurrentLineOnlyInFocusedEditor:new x(this),DimUnfocusedParagraphs:new T(this),DimmedParagraphsOpacity:new S(this),PauseDimUnfocusedParagraphsWhileScrolling:new H(this),PauseDimUnfocusedParagraphsWhileSelecting:new U(this),DimUnfocusedEditorsBehavior:new b(this),OnlyActivateAfterFirstInteraction:new O(this),LimitMaxCharsPerLine:new L(this),MaxCharsPerLine:new A(this),FullscreenWritingFocusShowsHeader:new v(this),FullscreenWritingFocusVignette:new E(this),FullscreenWritingFocusVignetteStyle:new C(this)};commands={ToggleTypewriterAndDimming:new K(this),MoveTypewriter:new z(this),FullscreenWritingFocus:new N(this)};async onload(){await this.loadSettings();for(let e of Object.values(this.features))e.load();for(let e of Object.values(this.commands))e.load();this.addSettingTab(new m(this.app,this)),this.registerEditorExtension(this.editorExtensions)}onunload(){for(let e of Object.values(this.features))e.disable()}reloadCodeMirror(){this.editorExtensions.splice(0,this.editorExtensions.length);let e=[a.of(this.settings),I.of(this.perWindowProps),se];this.editorExtensions.push(e),this.app.workspace.updateOptions()}async loadSettings(){this.settings=Object.assign(R,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}setCSSVariable(e,i){this.perWindowProps.cssVariables[e]=i}};var Le=B;
